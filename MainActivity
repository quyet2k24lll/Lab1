package com.example.firebase;

import android.annotation.SuppressLint;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.TextView;

import androidx.activity.EdgeToEdge;
import androidx.annotation.NonNull;
import androidx.appcompat.app.AppCompatActivity;
import androidx.core.graphics.Insets;
import androidx.core.view.ViewCompat;
import androidx.core.view.WindowInsetsCompat;

import com.google.android.gms.tasks.OnCompleteListener;
import com.google.android.gms.tasks.OnFailureListener;
import com.google.android.gms.tasks.OnSuccessListener;
import com.google.android.gms.tasks.Task;
import com.google.firebase.firestore.FirebaseFirestore;
import com.google.firebase.firestore.QueryDocumentSnapshot;
import com.google.firebase.firestore.QuerySnapshot;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.Objects;
import java.util.UUID;

public class MainActivity extends AppCompatActivity {
    FirebaseFirestore database;
    Button btnInsert, btnUpdate, btnDelete;
    TextView tvResult;
    @SuppressLint("MissingInflatedId")
    @SuppressWarnings("MissingInflateId")
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        EdgeToEdge.enable(this);
        setContentView(R.layout.activity_main);
        database=FirebaseFirestore.getInstance();// khởi tạo database
        btnInsert = findViewById(R.id.btnButton1);
        btnUpdate = findViewById(R.id.btnButton2);
        btnDelete = findViewById(R.id.btnButton3);
        tvResult = findViewById(R.id.tvTextView1);
        btnInsert.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                insertFirebase(tvResult);
            }
        });
        btnUpdate.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                updateFirebase(tvResult);
            }
        });
        btnDelete.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                deleteFirebase(tvResult);
            }
        });
        SelectDataFormFirebase(tvResult);
    }
    String id="";
    ToDo toDo=null;
    public void insertFirebase(TextView tvResult){
        id = UUID.randomUUID().toString();// lấy 1 id bất kì
        //tạo đối tượng để insert
        toDo=new ToDo(id,"title 1","content 1");
        //chuyển đổi sang đối tượng có thể thao tác với firebase
        HashMap<String, Object> mapTodo = toDo.converHashMap();
        //insert vào database
        database.collection("TODO").document(id)
                .set(mapTodo)//đối tượng cần insert
                .addOnSuccessListener(new OnSuccessListener<Void>() {
                    @Override
                    public void onSuccess(Void unused) {
                        tvResult.setText("Them thanh cong");
                    }
                })
                .addOnFailureListener(new OnFailureListener() {
                    @Override
                    public void onFailure(@NonNull Exception e) {
                        tvResult.setText(e.getMessage());
                    }
                })
        ;
    }
    public void updateFirebase (TextView tvResult){
        id="f73a05a4-cb12-490b-9f89-522924740f0a";
        toDo = new ToDo(id,"sua title 1","sua content 1");
        database.collection("TODO").document(toDo.getId())
                .update(toDo.converHashMap())
                .addOnSuccessListener(new OnSuccessListener<Void>() {
                    @Override
                    public void onSuccess(Void unused) {
                        tvResult.setText("Sua thanh cong");
                    }
                })
                .addOnFailureListener(new OnFailureListener() {
                    @Override
                    public void onFailure(@NonNull Exception e) {
                        tvResult.setText(e.getMessage());
                    }
                });
    }
    public void deleteFirebase (TextView tvResult){
        id="f73a05a4-cb12-490b-9f89-522924740f0a";
        database.collection("TODO").document(id)
                .delete()
                .addOnSuccessListener(new OnSuccessListener<Void>() {
                    @Override
                    public void onSuccess(Void unused) {
                        tvResult.setText("Xóa thành công");
                    }
                })
                .addOnFailureListener(new OnFailureListener() {
                    @Override
                    public void onFailure(@NonNull Exception e) {
                        tvResult.setText(e.getMessage());
                    }
                });
    }
    String strResult = "";
    public ArrayList<ToDo> SelectDataFormFirebase(TextView tvResult){
        ArrayList<ToDo> list = new ArrayList<>();
        database.collection("TODO")
                .get()
                .addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {
                    @Override
                    public void onComplete(@NonNull Task<QuerySnapshot> task) {
                        if (task.isSuccessful()){
                            strResult="";
                            for (QueryDocumentSnapshot document : task.getResult()){
                                ToDo toDo1 = document.toObject(ToDo.class);
                                strResult += "Id:" + toDo1.getId() + "\n";
                                list.add(toDo1);
                            }
                            tvResult.setText(strResult);
                        } else {
                            tvResult.setText("Doc du lieu that bai");
                        }
                    }
                }).addOnFailureListener(new OnFailureListener() {
                    @Override
                    public void onFailure(@NonNull Exception e) {
                        tvResult.setText(e.getMessage());
                    }
                });
        return list;
    }
}
